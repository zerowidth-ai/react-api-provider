{"version":3,"file":"index.js","sources":["../../src/index.js"],"sourcesContent":["import React, { createContext, useState, useContext, useCallback } from 'react';\n\nconst ZeroWidthApiContext = createContext();\n\nconst generateId = () => `id_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\nexport const ZeroWidthApiProvider = ({ children, appId, endpointId, projectId, proxyUrl, debugMode }) => {\n  if (debugMode) console.log('ZeroWidthApiProvider', { appId, endpointId, proxyUrl, debugMode });\n\n  const effectiveProjectId = projectId || endpointId || appId;\n  if (appId) {\n    console.warn('Warning: The appId prop is deprecated and will be removed in future versions. Please use projectId instead.');\n  }\n  if (endpointId) {\n    console.warn('Warning: The endpointId prop is deprecated and will be removed in future versions. Please use projectId instead.');\n  }\n\n  if (!effectiveProjectId || typeof effectiveProjectId !== 'string' || typeof proxyUrl !== 'string') {\n    throw new Error('projectId and proxyUrl props must be provided as strings to ZeroWidthApiProvider');\n  }\n\n  const [data, setData] = useState({});\n  const [error, setError] = useState({});\n  const [loading, setLoading] = useState({});\n  const [stream, setStream] = useState({});\n\n  const process = useCallback(async (options = {}, identifier = generateId()) => {\n    setLoading(prev => ({ ...prev, [identifier]: true }));\n    setError(prev => ({ ...prev, [identifier]: null }));\n    setStream(prev => ({ ...prev, [identifier]: [] }));\n    setData(prev => ({ ...prev, [identifier]: null }));\n\n    try {\n      const url = `${proxyUrl}/process/${effectiveProjectId}/${options.agentId}`;\n      const headers = { 'Content-Type': 'application/json' };\n\n      if (options.stream) {\n        const response = await fetch(url, {\n          method: 'POST',\n          headers,\n          body: JSON.stringify(options),\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const reader = response.body.getReader();\n        const decoder = new TextDecoder('utf-8');\n        let buffer = '';\n        let eventType = '';\n\n        const readStream = async () => {\n          while (true) {\n            const { done, value } = await reader.read();\n            if (done) break;\n\n            buffer += decoder.decode(value, { stream: true });\n            let lines = buffer.split('\\n');\n\n            for (let i = 0; i < lines.length - 1; i++) {\n              const line = lines[i].trim();\n              if (line.startsWith('event: ')) {\n                eventType = line.slice(7).trim();\n              } else if (line.startsWith('data: ')) {\n                const eventData = JSON.parse(line.slice(6));\n                setStream(prev => ({\n                  ...prev,\n                  [identifier]: [...(prev[identifier] || []), { eventType, data: eventData }]\n                }));\n              }\n            }\n\n            buffer = lines[lines.length - 1];\n          }\n        };\n\n        readStream().catch(err => {\n          setError(prev => ({ ...prev, [identifier]: err }));\n        });\n\n      } else {\n        const response = await fetch(url, {\n          method: 'POST',\n          headers,\n          body: JSON.stringify(options)\n        });\n        const responseData = await response.json();\n        setData(prev => ({ ...prev, [identifier]: responseData }));\n        return responseData;\n      }\n    } catch (err) {\n      setError(prev => ({ ...prev, [identifier]: err }));\n    } finally {\n      setLoading(prev => ({ ...prev, [identifier]: false }));\n    }\n  }, [proxyUrl, effectiveProjectId]);\n\n\n  const getHistory = useCallback(async ({ agentId, userId, sessionId, startAfter } = {}, identifier = generateId()) => {\n    setLoading(prev => ({ ...prev, [identifier]: true }));\n    setError(prev => ({ ...prev, [identifier]: null }));\n\n    try {\n      const queryParams = new URLSearchParams(startAfter ? { startAfter } : {});\n      const response = await fetch(`${proxyUrl}/history/${effectiveProjectId}/${agentId}/${userId}/${sessionId}?${queryParams}`);\n      const responseData = await response.json();\n      setData(prev => ({ ...prev, [identifier]: responseData }));\n    } catch (err) {\n      setError(prev => ({ ...prev, [identifier]: err }));\n    } finally {\n      setLoading(prev => ({ ...prev, [identifier]: false }));\n    }\n  }, [proxyUrl, effectiveProjectId]);\n\n  const report = useCallback(async ({ agentId, userId, sessionId, type, category, details, data } = {}, identifier = generateId()) => {\n    setLoading(prev => ({ ...prev, [identifier]: true }));\n    setError(prev => ({ ...prev, [identifier]: null }));\n\n    try {\n      let url = `${proxyUrl}/report/${effectiveProjectId}/${agentId}`;\n      const response = await fetch(url, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify({\n          user_id: userId,\n          session_id: sessionId,\n          type,\n          category,\n          details,\n          data\n        })\n      });\n\n      return await response.json();\n    } catch (err) {\n      setError(prev => ({ ...prev, [identifier]: err }));\n    } finally {\n      setLoading(prev => ({ ...prev, [identifier]: false }));\n    }\n  }, [proxyUrl, effectiveProjectId]);\n\n  return (\n    <ZeroWidthApiContext.Provider value={{ data, error, loading, stream, process, getHistory, report }}>\n      {children}\n    </ZeroWidthApiContext.Provider>\n  );\n};\n\nexport const useZeroWidthApi = () => {\n  const context = useContext(ZeroWidthApiContext);\n  if (context === undefined) {\n    throw new Error('useZeroWidthApi must be used within a ZeroWidthApiProvider');\n  }\n  return context;\n};\n"],"names":["ZeroWidthApiContext","createContext","generateId","concat","Date","now","Math","random","toString","substr","ZeroWidthApiProvider","_ref","children","appId","endpointId","projectId","proxyUrl","debugMode","console","log","effectiveProjectId","warn","Error","_useState2","_slicedToArray","useState","data","setData","_useState4","error","setError","_useState6","loading","setLoading","_useState8","stream","setStream","process","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","options","identifier","url","_headers","response","reader","decoder","buffer","eventType","readStream","_response","responseData","_args3","arguments","wrap","_context3","prev","next","length","undefined","_objectSpread","_defineProperty","agentId","headers","fetch","method","body","JSON","stringify","sent","ok","status","getReader","TextDecoder","_ref3","_callee","_yield$reader$read","done","value","lines","_loop","i","_context2","read","abrupt","decode","split","line","eventData","_context","trim","startsWith","slice","parse","_toConsumableArray","stop","delegateYield","apply","this","err","json","t0","finish","getHistory","_callee3","_ref5","userId","sessionId","startAfter","queryParams","_args4","_context4","URLSearchParams","report","_callee4","_ref7","type","category","details","_args5","_context5","user_id","session_id","React","createElement","Provider","useZeroWidthApi","context","useContext"],"mappings":"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"}