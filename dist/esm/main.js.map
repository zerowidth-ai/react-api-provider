{"mappings":"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","sources":["src/index.js"],"sourcesContent":["// ZeroWidthApiProvider.js\nimport React, { createContext, useState, useContext, useCallback } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst ZeroWidthApiContext = createContext();\n\nexport const ZeroWidthApiProvider = ({ children, appId, proxyUrl }) => {\n\n  \n  if (typeof appId !== 'string' || typeof proxyUrl !== 'string') {\n    throw new Error('appId and proxyUrl props must be provided as strings to ZeroWidthApiProvider');\n  }\n\n  const [data, setData] = useState({});\n  const [error, setError] = useState({});\n  const [loading, setLoading] = useState({});\n\n  // Function to process data through an installed intelligence\n  const process = useCallback(async (options = {} , identifier = uuidv4()) => {\n\n    // Set loading state for this specific identifier\n    setLoading((prevLoading) => ({ ...prevLoading, [identifier]: true }));\n    setError((prevError) => ({ ...prevError, [identifier]: null }));\n\n    try {\n      // Construct the full URL to the proxy endpoint\n      const url = `${proxyUrl}/process/${appId}/${options.intelligenceId}`;\n      // Make the HTTP request using axios\n      const response = await axios({\n        method: 'POST',\n        url: url,\n        data: options, \n      });\n      // Set data for this specific identifier\n      setData((prevData) => ({ ...prevData, [identifier]: response.data }));\n    } catch (err) {\n      // Set error for this specific identifier\n      setError((prevError) => ({ ...prevError, [identifier]: err }));\n    } finally {\n      // Set loading state to false for this specific identifier\n      setLoading((prevLoading) => ({ ...prevLoading, [identifier]: false }));\n    }\n  }, [proxyUrl, appId]);\n\n\n  // Function to get the history of a specific intelligence\n  const getHistory = useCallback(async ({ intelligenceId, userId, sessionId, startAfter } = {}, identifier = uuidv4()) => {\n    setLoading((prevLoading) => ({ ...prevLoading, [identifier]: true }));\n    setError((prevError) => ({ ...prevError, [identifier]: null }));\n\n    try {\n      const url = `${proxyUrl}/history/${appId}/${intelligenceId}/${userId}/${sessionId}`;\n      const params = startAfter ? { startAfter } : {};\n      const response = await axios.get(url, { params });\n      setData((prevData) => ({ ...prevData, [identifier]: response.data }));\n    } catch (err) {\n      setError((prevError) => ({ ...prevError, [identifier]: err }));\n    } finally {\n      setLoading((prevLoading) => ({ ...prevLoading, [identifier]: false }));\n    }\n  }, [proxyUrl, appId]);\n\n  // Expose the context value\n  const contextValue = {\n    data,\n    error,\n    loading,\n    process,\n    getHistory\n  };\n\n  return (\n    <ZeroWidthApiContext.Provider value={contextValue}>\n      {children}\n    </ZeroWidthApiContext.Provider>\n  );\n};\n\nexport const useZeroWidthApi = () => {\n  const context = useContext(ZeroWidthApiContext);\n  if (context === undefined) {\n    throw new Error('useZeroWidthApi must be used within a ZeroWidthApiProvider');\n  }\n  return context;\n};\n"],"names":[],"version":3,"file":"main.js.map","sourceRoot":"../../"}